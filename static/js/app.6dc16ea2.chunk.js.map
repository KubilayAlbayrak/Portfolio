{"version":3,"sources":["globalStyles.tsx","src/components/Button/styles.tsx","src/components/Button/Button.tsx","src/components/Seperator/Seperator.tsx","src/components/Sidebar/styles.tsx","src/components/Sidebar/SideBar.tsx","src/components/ToggleHeader/ToggleHeader.tsx","src/components/WorkCard/WorkCard.tsx","src/components/ToggleHeaderContent/styles.tsx","src/components/ToggleHeaderContent/ToggleHeaderContent.tsx","src/screens/mainScreen/styles.tsx","src/screens/mainScreen/MainScreen.tsx","src/screens/blogScreen/BlogScreen.tsx","src/screens/skillsScreen/SkillsScreen.tsx","src/screens/aboutmeScreen/AboutMeScreen.tsx","src/navigation/Main.tsx","App.tsx","src/assets/kLogo.png"],"names":["COLOR","styles","StyleSheet","create","customButtonView","width","height","borderColor","borderWidth","backgroundColor","justifyContent","alignItems","customButtonViewHover","buttonText","color","alignSelf","fontWeight","buttonTextHover","CustomButton","title","buttonStyle","onPressButton","useState","hoveredButton","setHoveredButton","Pressable","onPress","onHoverIn","onHoverOut","style","Text","Seperator","View","flex","maxHeight","hp","sideBarLogo","sideBarLogoView","position","top","marginBottom","headerView","flexDirection","headerBarText","fontSize","headerBarTextHovered","headerBarTextView","logoView","SideBar","navigation","useLinkTo","useWindowDimensions","scale","hoveredMySkills","setHoveredMySkills","hoveredBlog","setHoveredBlog","hoveredAbout","setHoveredAbout","hoveredLinkedin","setHoveredLinkedin","hoveredGithub","setHoveredGithub","hoveredTwitter","setHoveredTwitter","hoveredInstagram","setHoveredInstagram","navigate","Image","source","require","Linking","openURL","FontAwesome5","name","size","AntDesign","ToggleHeader","setToggleHeaderContent","toggleHeaderContent","iconsChanged","setIconsChanged","toggleHeaderView","Octicons","right","wp","zIndex","WorkCard","workCardFlipped","setWorkCardFlipped","isFlipped","flipDirection","borderRadius","marginLeft","marginTop","ToggleHeaderContent","hoveredHome","setHoveredHome","push","heightPercentageToDP","text","mainScreenLogo","MainScreen","typing","fixed","Button","BlogScreen","maxWidth","SkillsScreen","Dimensions","get","progressBarLoading","setProgressBarLoading","useEffect","setTimeout","animated","indeterminate","indeterminateAnimationDuration","animationType","progress","unfilledColor","AboutMeScreen","MainStack","createNativeStackNavigator","MainStackScreen","Navigator","initialRouteName","screenOptions","headerShown","Screen","component","App","NavigationContainer","linking","prefixes","config","screens","Root","path","fallback","Main","module","exports"],"mappings":"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","file":"static/js/app.6dc16ea2.chunk.js","sourcesContent":["export const COLOR = {\n  headerBackground: '#181818',\n  mainBackground: '#1D1D1D',\n  headerText: '#8C8C8C',\n  rgbGreen: '#0DFDD7',\n  rgbRed: '#FC2054',\n  rgbPurple: '#D26BD5',\n  workCardBg: '#2A2A2A',\n  workCardText: '#AAAAAA',\n};\n","import { StyleSheet } from 'react-native';\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp,\n} from 'react-native-responsive-screen';\nimport { COLOR } from '../../../globalStyles';\n\nexport const styles = StyleSheet.create({\n  customButtonView: {\n    width: '189px',\n    height: '44px',\n    borderColor: COLOR.rgbGreen,\n    borderWidth: 1,\n    backgroundColor: COLOR.mainBackground,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  customButtonViewHover: {\n    width: '189px',\n    height: '44px',\n    backgroundColor: COLOR.rgbGreen,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: COLOR.rgbGreen,\n    alignSelf: 'center',\n    justifyContent: 'center',\n    fontWeight: 'bold',\n  },\n  buttonTextHover: {\n    alignSelf: 'center',\n    justifyContent: 'center',\n    color: COLOR.mainBackground,\n    fontWeight: 'bold',\n  },\n});\n","import React, { useState } from 'react';\nimport { View, Text, Button, Pressable, ViewStyle } from 'react-native';\nimport { styles } from './styles';\n\nexport type PropsType = {\n  title: string;\n  buttonStyle?: ViewStyle;\n  onPressButton: () => void;\n};\n\nconst CustomButton: React.FC<PropsType> = ({\n  title,\n  buttonStyle,\n  onPressButton,\n}) => {\n  const [hoveredButton, setHoveredButton] = useState<boolean>(false);\n  return (\n    <Pressable\n      onPress={onPressButton}\n      onHoverIn={() => setHoveredButton(true)}\n      onHoverOut={() => setHoveredButton(false)}\n      style={\n        hoveredButton\n          ? [styles.customButtonViewHover, buttonStyle]\n          : [styles.customButtonView, buttonStyle]\n      }\n    >\n      <Text style={hoveredButton ? styles.buttonTextHover : styles.buttonText}>\n        {title}\n      </Text>\n    </Pressable>\n  );\n};\n\nexport default CustomButton;\n","import React from 'react';\nimport { View } from 'react-native';\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp,\n} from 'react-native-responsive-screen';\n\nconst Seperator = () => {\n  return (\n    <View\n      style={{\n        flex: 1,\n        maxHeight: hp(0.1),\n        backgroundColor: '#282828',\n      }}\n    />\n  );\n};\n\nexport default Seperator;\n","import { StyleSheet } from 'react-native';\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp,\n} from 'react-native-responsive-screen';\nimport { COLOR } from '../../../globalStyles';\n\nexport const styles = StyleSheet.create({\n  sideBarLogo: {},\n  sideBarLogoView: { position: 'absolute', top: hp(0), marginBottom: hp(10) },\n  headerView: {\n    backgroundColor: COLOR.headerBackground,\n    flexDirection: 'column',\n    flex: 9.5,\n  },\n  headerBarText: {\n    color: 'gray',\n    fontWeight: '600',\n    fontSize: 15,\n    alignSelf: 'center',\n  },\n  headerBarTextHovered: {\n    color: COLOR.rgbGreen,\n    fontWeight: '600',\n    fontSize: 15,\n    alignSelf: 'center',\n  },\n  headerBarTextView: {\n    flex: 4,\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n  },\n  logoView: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n});\n","import React, { useState } from 'react';\nimport {\n  Text,\n  View,\n  Pressable,\n  Linking,\n  Image,\n  useWindowDimensions,\n} from 'react-native';\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp,\n} from 'react-native-responsive-screen';\nimport { COLOR } from '../../../globalStyles';\nimport Seperator from '../Seperator/Seperator';\nimport { FontAwesome5, AntDesign } from '@expo/vector-icons';\n\nimport { useLinkTo } from '@react-navigation/native';\nimport { styles } from './styles';\n\nconst SideBar = ({ navigation }) => {\n  const linkTo = useLinkTo();\n  const { height, width, scale } = useWindowDimensions();\n\n  const [hoveredMySkills, setHoveredMySkills] = useState(false);\n  const [hoveredWork, setHoveredWork] = useState(false);\n  const [hoveredBlog, setHoveredBlog] = useState(false);\n  const [hoveredAbout, setHoveredAbout] = useState(false);\n  const [hoveredLinkedin, setHoveredLinkedin] = useState(false);\n  const [hoveredGithub, setHoveredGithub] = useState(false);\n  const [hoveredTwitter, setHoveredTwitter] = useState(false);\n  const [hoveredInstagram, setHoveredInstagram] = useState(false);\n\n  return (\n    <View style={styles.headerView}>\n      <View style={{ flex: 2 }}></View>\n      <Pressable\n        onPress={() => {\n          navigation.navigate('Home');\n        }}\n        style={styles.sideBarLogoView}\n      >\n        <Image\n          source={require('../../assets/kLogo.png')}\n          style={{ width: width * 0.1, height: height * 0.1 }}\n        ></Image>\n      </Pressable>\n      <View style={styles.headerBarTextView}>\n        <Seperator />\n\n        <Pressable\n          onHoverIn={() => setHoveredAbout(true)}\n          onHoverOut={() => setHoveredAbout(false)}\n          onPress={() => {\n            navigation.navigate('About');\n          }}\n        >\n          <Text\n            style={\n              hoveredAbout ? styles.headerBarTextHovered : styles.headerBarText\n            }\n          >\n            About\n          </Text>\n        </Pressable>\n\n        <Seperator />\n        <Pressable\n          onHoverIn={() => setHoveredMySkills(true)}\n          onHoverOut={() => setHoveredMySkills(false)}\n          onPress={() => {\n            navigation.navigate('Skills');\n          }}\n        >\n          <Text\n            style={\n              hoveredMySkills\n                ? styles.headerBarTextHovered\n                : styles.headerBarText\n            }\n          >\n            My Skills\n          </Text>\n        </Pressable>\n        <Seperator />\n        <Pressable\n          onHoverIn={() => setHoveredBlog(true)}\n          onHoverOut={() => setHoveredBlog(false)}\n          onPress={() => {\n            navigation.navigate('Blog');\n          }}\n        >\n          <Text\n            style={\n              hoveredBlog ? styles.headerBarTextHovered : styles.headerBarText\n            }\n          >\n            Blog\n          </Text>\n        </Pressable>\n        <Seperator />\n      </View>\n      <View style={styles.logoView}>\n        <Pressable\n          onHoverIn={() => setHoveredLinkedin(true)}\n          onHoverOut={() => setHoveredLinkedin(false)}\n          onPress={() =>\n            Linking.openURL(\n              'https://www.linkedin.com/in/kubilay-albayrak-193892149/'\n            )\n          }\n        >\n          <FontAwesome5\n            name='linkedin-in'\n            size={20}\n            color={hoveredLinkedin ? COLOR.rgbGreen : 'gray'}\n          />\n        </Pressable>\n        <Pressable\n          onHoverIn={() => setHoveredGithub(true)}\n          onHoverOut={() => setHoveredGithub(false)}\n          onPress={() => Linking.openURL('https://github.com/KubilayAlbayrak')}\n        >\n          <AntDesign\n            name='github'\n            size={20}\n            color={hoveredGithub ? COLOR.rgbGreen : 'gray'}\n          />\n        </Pressable>\n        <Pressable\n          onHoverIn={() => setHoveredTwitter(true)}\n          onHoverOut={() => setHoveredTwitter(false)}\n          onPress={() => Linking.openURL('https://twitter.com/kubilayalbyrk')}\n        >\n          <AntDesign\n            name='twitter'\n            size={20}\n            color={hoveredTwitter ? COLOR.rgbGreen : 'gray'}\n          />\n        </Pressable>\n        <Pressable\n          onHoverIn={() => setHoveredInstagram(true)}\n          onHoverOut={() => setHoveredInstagram(false)}\n          onPress={() => Linking.openURL('https://instagram.com/kubilayalbyrk')}\n        >\n          <AntDesign\n            name='instagram'\n            size={20}\n            color={hoveredInstagram ? COLOR.rgbGreen : 'gray'}\n          />\n        </Pressable>\n      </View>\n      <View style={{ flex: 2 }}></View>\n    </View>\n  );\n};\n\nexport default SideBar;\n","import React, { useEffect, useState } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableWithoutFeedback,\n  Pressable,\n  Modal,\n} from 'react-native';\nimport { Octicons } from '@expo/vector-icons';\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp,\n} from 'react-native-responsive-screen';\nimport { AntDesign } from '@expo/vector-icons';\nimport { COLOR } from '../../../globalStyles';\n\nexport type PropsType = {\n  setToggleHeaderContent: React.Dispatch<React.SetStateAction<boolean>>;\n  toggleHeaderContent: boolean;\n  isFocused: boolean;\n};\n\nconst ToggleHeader: React.FC<PropsType> = ({\n  setToggleHeaderContent,\n  toggleHeaderContent,\n}) => {\n  const [iconsChanged, setIconsChanged] = useState(false);\n\n  return (\n    <>\n      <View style={styles.toggleHeaderView}>\n        <Pressable\n          onPress={() => {\n            setIconsChanged(!iconsChanged);\n            setToggleHeaderContent(!toggleHeaderContent);\n          }}\n        >\n          {iconsChanged ? (\n            <AntDesign name='close' size={40} color='white' />\n          ) : (\n            <Octicons name='three-bars' size={40} color='white' />\n          )}\n        </Pressable>\n      </View>\n    </>\n  );\n};\n\nexport default ToggleHeader;\n\nconst styles = StyleSheet.create({\n  toggleHeaderView: {\n    position: 'absolute',\n    top: hp(2),\n    right: wp(2),\n    zIndex: 6000,\n  },\n});\n","import React, { useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport ReactCardFlip from 'react-card-flip';\nimport { styles } from './styles';\nimport { COLOR } from '../../../globalStyles';\nimport {\n  heightPercentageToDP as hp,\n  widthPercentageToDP as wp,\n} from 'react-native-responsive-screen';\n\nconst WorkCard = () => {\n  const [workCardFlipped, setWorkCardFlipped] = useState<boolean>(false);\n\n  return (\n    <ReactCardFlip isFlipped={workCardFlipped} flipDirection='vertical'>\n      <Pressable\n        onHoverIn={() => setWorkCardFlipped(true)}\n        style={{\n          backgroundColor: COLOR.workCardBg,\n          width: '288px',\n          height: '146px',\n          justifyContent: 'space-evenly',\n          alignItems: 'flex-start',\n          borderRadius: '15px',\n        }}\n      >\n        <Text\n          style={{\n            color: COLOR.workCardText,\n            fontSize: hp(2),\n            fontWeight: 'bold',\n            alignSelf: 'center',\n          }}\n        >\n          React / React-Native{'\\n'}\n          {'\\n'} {'       '} Developer\n        </Text>\n      </Pressable>\n      <Pressable\n        onHoverOut={() => setWorkCardFlipped(false)}\n        style={{\n          backgroundColor: COLOR.workCardBg,\n          width: '288px',\n          height: '146px',\n          justifyContent: 'space-evenly',\n          alignItems: 'flex-start',\n          borderRadius: '15px',\n        }}\n      >\n        <Text\n          style={{\n            color: COLOR.workCardText,\n            fontSize: hp(3),\n            fontWeight: '300',\n            marginLeft: wp(1),\n          }}\n        >\n          Ete Solutions\n        </Text>\n        <Text\n          style={{\n            color: COLOR.workCardText,\n            fontSize: hp(2),\n            fontWeight: '200',\n            marginLeft: wp(1),\n          }}\n        >\n          2021 -\n        </Text>\n        <Text\n          style={{\n            color: COLOR.workCardText,\n            fontSize: hp(1.5),\n            fontWeight: '500',\n            marginLeft: wp(1),\n          }}\n        >\n          Working on Web / Mobile side in Security & Military Applications\n          Project\n        </Text>\n      </Pressable>\n    </ReactCardFlip>\n  );\n};\n\nexport default WorkCard;\n","import { StyleSheet, useWindowDimensions } from 'react-native';\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp,\n} from 'react-native-responsive-screen';\nimport { COLOR } from '../../../globalStyles';\n\nexport const styles = StyleSheet.create({\n  sideBarLogoView: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  headerView: {\n    backgroundColor: COLOR.headerBackground,\n    flexDirection: 'column',\n    flex: 9.5,\n  },\n  headerBarText: {\n    color: 'gray',\n    fontWeight: 'bold',\n    fontSize: 20,\n    alignSelf: 'center',\n    marginBottom: hp(2),\n    marginTop: hp(2),\n  },\n  headerBarTextHovered: {\n    color: COLOR.rgbGreen,\n    fontWeight: 'bold',\n    fontSize: 20,\n    alignSelf: 'center',\n    marginBottom: hp(2),\n    marginTop: hp(2),\n  },\n  headerBarTextView: {\n    flex: 4,\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n  },\n  logoView: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n});\n","import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  useWindowDimensions,\n  Pressable,\n  Image,\n  Linking,\n} from 'react-native';\nimport { Seperator } from '../../components';\nimport { COLOR } from '../../../globalStyles';\nimport { styles } from './styles';\nimport { FontAwesome5, AntDesign } from '@expo/vector-icons';\nimport {\n  heightPercentageToDP,\n  widthPercentageToDP,\n} from 'react-native-responsive-screen';\nimport {\n  NavigationProp,\n  ParamListBase,\n  useLinkTo,\n} from '@react-navigation/native';\n\nexport type PropsType = {\n  navigation: NavigationProp<ParamListBase>;\n  setToggleHeaderContent: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nconst ToggleHeaderContent: React.FC<PropsType> = ({\n  navigation,\n  setToggleHeaderContent,\n}) => {\n  const [hoveredMySkills, setHoveredMySkills] = useState(false);\n  const [hoveredHome, setHoveredHome] = useState(false);\n  const [hoveredWork, setHoveredWork] = useState(false);\n  const [hoveredBlog, setHoveredBlog] = useState(false);\n  const [hoveredAbout, setHoveredAbout] = useState(false);\n  const [hoveredLinkedin, setHoveredLinkedin] = useState(false);\n  const [hoveredGithub, setHoveredGithub] = useState(false);\n  const [hoveredTwitter, setHoveredTwitter] = useState(false);\n  const [hoveredInstagram, setHoveredInstagram] = useState(false);\n\n  const { height, width, scale } = useWindowDimensions();\n\n  return (\n    <View\n      style={{\n        width: width,\n        height: height,\n        backgroundColor: COLOR.mainBackground,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        flex: 1,\n      }}\n    >\n      <View style={{ flex: 1 }}></View>\n      <View\n        style={{\n          flex: 3,\n          justifyContent: 'center',\n        }}\n      >\n        <Seperator />\n        <Pressable\n          onHoverIn={() => setHoveredHome(true)}\n          onHoverOut={() => setHoveredHome(false)}\n          onPress={() => {\n            navigation.push('Home');\n            setToggleHeaderContent(true);\n          }}\n        >\n          <Text\n            style={\n              hoveredHome ? styles.headerBarTextHovered : styles.headerBarText\n            }\n          >\n            Home\n          </Text>\n        </Pressable>\n        <Seperator />\n        <Pressable\n          onHoverIn={() => setHoveredAbout(true)}\n          onHoverOut={() => setHoveredAbout(false)}\n          onPress={() => {\n            navigation.push('About');\n            setToggleHeaderContent(true);\n          }}\n        >\n          <Text\n            style={\n              hoveredAbout ? styles.headerBarTextHovered : styles.headerBarText\n            }\n          >\n            About\n          </Text>\n        </Pressable>\n        <Seperator />\n        <Pressable\n          onHoverIn={() => setHoveredMySkills(true)}\n          onHoverOut={() => setHoveredMySkills(false)}\n          onPress={() => {\n            navigation.push('Skills');\n            setToggleHeaderContent(true);\n          }}\n        >\n          <Text\n            style={\n              hoveredMySkills\n                ? styles.headerBarTextHovered\n                : styles.headerBarText\n            }\n          >\n            My Skills\n          </Text>\n        </Pressable>\n        <Seperator />\n        <Pressable\n          onHoverIn={() => setHoveredBlog(true)}\n          onHoverOut={() => setHoveredBlog(false)}\n          onPress={() => {\n            navigation.push('Blog');\n            setToggleHeaderContent(true);\n          }}\n        >\n          <Text\n            style={\n              hoveredBlog ? styles.headerBarTextHovered : styles.headerBarText\n            }\n          >\n            Blog\n          </Text>\n        </Pressable>\n        <Seperator />\n      </View>\n      <View\n        style={{\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'space-around',\n          alignItems: 'flex-end',\n          marginBottom: heightPercentageToDP(5),\n        }}\n      >\n        <Pressable\n          onHoverIn={() => setHoveredLinkedin(true)}\n          onHoverOut={() => setHoveredLinkedin(false)}\n          onPress={() =>\n            Linking.openURL(\n              'https://www.linkedin.com/in/kubilay-albayrak-193892149/'\n            )\n          }\n        >\n          <FontAwesome5\n            name='linkedin-in'\n            size={20}\n            color={hoveredLinkedin ? COLOR.rgbGreen : 'gray'}\n          />\n        </Pressable>\n        <Pressable\n          onHoverIn={() => setHoveredGithub(true)}\n          onHoverOut={() => setHoveredGithub(false)}\n          onPress={() => Linking.openURL('https://github.com/KubilayAlbayrak')}\n        >\n          <AntDesign\n            name='github'\n            size={20}\n            color={hoveredGithub ? COLOR.rgbGreen : 'gray'}\n          />\n        </Pressable>\n        <Pressable\n          onHoverIn={() => setHoveredTwitter(true)}\n          onHoverOut={() => setHoveredTwitter(false)}\n          onPress={() => Linking.openURL('https://twitter.com/kubilayalbyrk')}\n        >\n          <AntDesign\n            name='twitter'\n            size={20}\n            color={hoveredTwitter ? COLOR.rgbGreen : 'gray'}\n          />\n        </Pressable>\n        <Pressable\n          onHoverIn={() => setHoveredInstagram(true)}\n          onHoverOut={() => setHoveredInstagram(false)}\n          onPress={() => Linking.openURL('https://instagram.com/kubilayalbyrk')}\n        >\n          <AntDesign\n            name='instagram'\n            size={20}\n            color={hoveredInstagram ? COLOR.rgbGreen : 'gray'}\n          />\n        </Pressable>\n      </View>\n    </View>\n  );\n};\n\nexport default ToggleHeaderContent;\n","import { StyleSheet } from 'react-native';\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp,\n} from 'react-native-responsive-screen';\n\nexport const styles = StyleSheet.create({\n  text: {\n    color: 'white',\n    fontSize: 70,\n    fontWeight: 'bold',\n  },\n  mainScreenLogo: {\n    position: 'absolute',\n    right: wp(5),\n    top: hp(20),\n    width: wp(20),\n    height: wp(20),\n  },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, useWindowDimensions, Linking, Image } from 'react-native';\nimport { COLOR } from '../../../globalStyles';\nimport {\n  Button,\n  ToggleHeader,\n  Sidebar,\n  ToggleHeaderContent,\n} from '../../components';\nimport { styles } from './styles';\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp,\n} from 'react-native-responsive-screen';\nimport TypeWriter from 'react-native-typewriter';\nconst MainScreen = ({ navigation }) => {\n  const { height, width, scale } = useWindowDimensions();\n  const [toggleHeaderContent, setToggleHeaderContent] = useState<boolean>(true);\n\n  return (\n    <View\n      style={{\n        width: width,\n        height: height,\n        flexDirection: 'row',\n        backgroundColor: COLOR.mainBackground,\n      }}\n    >\n      {width >= 1045 && toggleHeaderContent ? (\n        <Sidebar navigation={navigation} />\n      ) : (\n        <ToggleHeader\n          setToggleHeaderContent={setToggleHeaderContent}\n          toggleHeaderContent={toggleHeaderContent}\n        />\n      )}\n      {toggleHeaderContent ? (\n        <View\n          style={{\n            flex: 90.5,\n            backgroundColor: COLOR.mainBackground,\n            marginTop: height >= 670 ? hp(10) : hp(5),\n          }}\n        >\n          <View style={{ backgroundColor: COLOR.mainBackground }}>\n            <View\n              style={{\n                marginTop: width >= 1045 ? hp(20) : hp(5),\n                marginLeft: wp(5),\n              }}\n            >\n              <TypeWriter style={styles.text} typing={1} fixed={true}>\n                {`Hi,\\nI'm Kubilay,\\nReact / React-Native Developer`}\n              </TypeWriter>\n            </View>\n          </View>\n          <View\n            style={{\n              backgroundColor: COLOR.mainBackground,\n            }}\n          >\n            <View\n              style={{\n                marginTop: height >= 1045 || height > 670 ? hp(5) : hp(5),\n                marginLeft: wp(5),\n                marginBottom: height >= 1045 || height > 670 ? hp(0) : hp(5),\n                justifyContent: 'center',\n              }}\n            >\n              <Button\n                title={'C o n t a c t   M e !'}\n                onPressButton={() => {\n                  Linking.openURL('mailto:skubilayalbayrak@gmail.com');\n                }}\n              />\n            </View>\n          </View>\n        </View>\n      ) : (\n        <ToggleHeaderContent\n          navigation={navigation}\n          setToggleHeaderContent={setToggleHeaderContent}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default MainScreen;\n","import React, { useState } from 'react';\nimport { View, Text, useWindowDimensions, Linking } from 'react-native';\nimport SideBar from '../../components/Sidebar/SideBar';\nimport ToggleHeader from '../../components/ToggleHeader/ToggleHeader';\nimport { COLOR } from '../../../globalStyles';\nimport { ToggleHeaderContent } from '../../components';\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp,\n} from 'react-native-responsive-screen';\n\nconst BlogScreen = ({ navigation }) => {\n  const { height, width, scale } = useWindowDimensions();\n  const [toggleHeaderContent, setToggleHeaderContent] = useState<boolean>(true);\n  return (\n    <View style={{ flex: 1, flexDirection: 'row' }}>\n      {width >= 1045 && toggleHeaderContent ? (\n        <SideBar navigation={navigation} />\n      ) : (\n        <ToggleHeader\n          setToggleHeaderContent={setToggleHeaderContent}\n          toggleHeaderContent={toggleHeaderContent}\n        />\n      )}\n      {toggleHeaderContent ? (\n        <View style={{ flex: 90.5, backgroundColor: COLOR.mainBackground }}>\n          <View style={{ marginTop: hp(20), marginLeft: wp(5) }}></View>\n          <Text\n            style={{\n              color: COLOR.workCardText,\n              fontWeight: '700',\n              fontSize: hp(1.5),\n              maxWidth: width >= 1515 ? '650px' : width * 0.8,\n              marginTop: hp(3),\n              marginLeft: wp(5),\n            }}\n          >\n            There is no blog post yet.I will start blogging.\n            {'\\n'}\n            {'\\n'}\n            If you want to stay tuned, you can follow my{' '}\n            <Text\n              onPress={() =>\n                Linking.openURL('https://medium.com/@skubilayalbayrak')\n              }\n              style={{ color: COLOR.rgbGreen }}\n            >\n              Medium\n            </Text>{' '}\n            account.\n          </Text>\n        </View>\n      ) : (\n        <ToggleHeaderContent\n          navigation={navigation}\n          setToggleHeaderContent={setToggleHeaderContent}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default BlogScreen;\n","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  useWindowDimensions,\n  Linking,\n  Dimensions,\n} from 'react-native';\nimport SideBar from '../../components/Sidebar/SideBar';\nimport ToggleHeader from '../../components/ToggleHeader/ToggleHeader';\nimport { ToggleHeaderContent } from '../../components';\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp,\n} from 'react-native-responsive-screen';\nimport { COLOR } from '../../../globalStyles';\nimport * as Progress from 'react-native-progress';\nimport { WorkCard } from '../../components';\nimport TypeWriter from 'react-native-typewriter';\n\nconst SkillsScreen = ({ navigation }) => {\n  const windowWidth = Dimensions.get('window').width;\n  const windowHeight = Dimensions.get('window').height;\n  const { height, width, scale } = useWindowDimensions();\n\n  const [progressBarLoading, setProgressBarLoading] = useState<boolean>(true);\n  const [toggleHeaderContent, setToggleHeaderContent] = useState<boolean>(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setProgressBarLoading(false);\n    }, 1000);\n  }, []);\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        flexDirection: 'row',\n        backgroundColor: COLOR.mainBackground,\n      }}\n    >\n      {width >= 1045 && toggleHeaderContent ? (\n        <SideBar navigation={navigation} />\n      ) : (\n        <ToggleHeader\n          setToggleHeaderContent={setToggleHeaderContent}\n          toggleHeaderContent={toggleHeaderContent}\n        />\n      )}\n      {toggleHeaderContent ? (\n        <View style={{ flex: 90.5, backgroundColor: COLOR.mainBackground }}>\n          <View\n            style={{\n              marginTop: width >= 1045 && height > 670 ? hp(20) : hp(10),\n              marginLeft: width >= 1045 ? wp(5) : wp(0),\n            }}\n          ></View>\n          <View\n            style={\n              width >= 1515\n                ? { flex: 1, flexDirection: 'row', marginLeft: wp(5) }\n                : { flex: 1, flexDirection: 'column', marginLeft: wp(4) }\n            }\n          >\n            <View style={{ flex: 1 }}>\n              <TypeWriter\n                style={{\n                  color: COLOR.rgbGreen,\n                  fontWeight: 'bold',\n                  fontSize: width >= 1045 ? hp(8) : hp(4),\n                }}\n                typing={1}\n                fixed={true}\n              >\n                {`Skills &\\nExperience`}\n              </TypeWriter>\n              <View>\n                <Text\n                  style={{\n                    color: 'white',\n                    fontWeight: '700',\n                    fontSize: hp(1.5),\n                    maxWidth: width >= 1515 ? '650px' : width * 0.8,\n                    marginTop: hp(3),\n                  }}\n                >\n                  {'\\n'}\n                  My adventure started in 2020.I started learning Html,Css,Js\n                  then I started learning React/React-Native.I started doing\n                  clone and personal projects to improve myself in my spare\n                  time.\n                  {'\\n'}\n                  {'\\n'}\n                  At my current job, we develop security and military\n                  applications and I work on both mobile and web sides.In these\n                  projects, I had the opportunity to focus more on redux and\n                  typescript and to improve myself.\n                  {'\\n'}\n                  {'\\n'}\n                  My future goals are to dig deeper into algorithms, to fully\n                  implement clean code,to write great tests.\n                  {'\\n'}\n                  {'\\n'}\n                  Visit my{' '}\n                  <Text\n                    onPress={() =>\n                      Linking.openURL(\n                        'https://www.linkedin.com/in/kubilay-albayrak-193892149/'\n                      )\n                    }\n                    style={{ color: COLOR.rgbGreen }}\n                  >\n                    Linkedin\n                  </Text>{' '}\n                  profile for more details or just{' '}\n                  <Text\n                    onPress={() =>\n                      Linking.openURL('mailto:skubilayalbayrak@gmail.com')\n                    }\n                    style={{ color: COLOR.rgbGreen }}\n                  >\n                    contact{' '}\n                  </Text>\n                  me.\n                </Text>\n              </View>\n            </View>\n            <View style={{ flex: 1, marginTop: width > 1515 ? hp(0) : hp(0) }}>\n              <Text style={{ color: 'white', fontWeight: 'bold' }}>\n                React JS\n              </Text>\n              <Progress.Bar\n                animated\n                indeterminate={progressBarLoading}\n                indeterminateAnimationDuration={1000}\n                animationType='spring'\n                progress={0.7}\n                width={width > 621 ? 600 : width * 0.8}\n                height={2.5}\n                color={COLOR.rgbGreen}\n                unfilledColor={COLOR.headerText}\n                borderWidth={0}\n                style={{ marginBottom: hp(2) }}\n              />\n              <Text style={{ color: 'white', fontWeight: 'bold' }}>\n                React Native\n              </Text>\n              <Progress.Bar\n                animated\n                indeterminate={progressBarLoading}\n                indeterminateAnimationDuration={1000}\n                animationType='spring'\n                progress={0.9}\n                width={width > 621 ? 600 : width * 0.8}\n                height={2.5}\n                color={COLOR.rgbRed}\n                unfilledColor={COLOR.headerText}\n                borderWidth={0}\n                style={{ marginBottom: hp(2) }}\n              />\n              <Text style={{ color: 'white', fontWeight: 'bold' }}>\n                TypeScript\n              </Text>\n              <Progress.Bar\n                animated\n                indeterminate={progressBarLoading}\n                indeterminateAnimationDuration={1000}\n                animationType='spring'\n                progress={0.85}\n                width={width > 621 ? 600 : width * 0.8}\n                height={2.5}\n                color={COLOR.rgbPurple}\n                unfilledColor={COLOR.headerText}\n                borderWidth={0}\n                style={{ marginBottom: hp(2) }}\n              />\n              <Text style={{ color: 'white', fontWeight: 'bold' }}>Redux</Text>\n              <Progress.Bar\n                animated\n                indeterminate={progressBarLoading}\n                indeterminateAnimationDuration={1000}\n                animationType='spring'\n                progress={0.8}\n                width={width > 621 ? 600 : width * 0.8}\n                height={2.5}\n                color={COLOR.rgbGreen}\n                unfilledColor={COLOR.headerText}\n                borderWidth={0}\n              />\n              <View\n                style={{\n                  marginTop: hp(4),\n                  marginLeft: width < 1515 ? wp(0) : wp(0),\n                }}\n              >\n                <WorkCard />\n              </View>\n            </View>\n          </View>\n        </View>\n      ) : (\n        <ToggleHeaderContent\n          navigation={navigation}\n          setToggleHeaderContent={setToggleHeaderContent}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default SkillsScreen;\n","import React, { useState } from 'react';\nimport { View, Text, useWindowDimensions, Linking } from 'react-native';\nimport SideBar from '../../components/Sidebar/SideBar';\nimport ToggleHeader from '../../components/ToggleHeader/ToggleHeader';\nimport { ToggleHeaderContent } from '../../components';\nimport {\n  widthPercentageToDP as wp,\n  heightPercentageToDP as hp,\n} from 'react-native-responsive-screen';\nimport { COLOR } from '../../../globalStyles';\nimport * as Progress from 'react-native-progress';\nimport { WorkCard } from '../../components';\nimport TypeWriter from 'react-native-typewriter';\n\nconst AboutMeScreen = ({ navigation }) => {\n  const { height, width, scale } = useWindowDimensions();\n  const [toggleHeaderContent, setToggleHeaderContent] = useState<boolean>(true);\n  return (\n    <View\n      style={{\n        flex: 1,\n        flexDirection: 'row',\n        backgroundColor: COLOR.mainBackground,\n      }}\n    >\n      {width >= 1045 && toggleHeaderContent ? (\n        <SideBar navigation={navigation} />\n      ) : (\n        <ToggleHeader\n          setToggleHeaderContent={setToggleHeaderContent}\n          toggleHeaderContent={toggleHeaderContent}\n        />\n      )}\n\n      {toggleHeaderContent ? (\n        <View\n          style={{\n            flex: 90.5,\n            backgroundColor: COLOR.mainBackground,\n            marginTop: width >= 1045 ? hp(0) : hp(10),\n          }}\n        >\n          <View\n            style={{\n              marginTop: width >= 1045 ? hp(20) : hp(0),\n              marginLeft: width >= 1045 ? wp(5) : wp(0),\n            }}\n          ></View>\n          <View style={{ flex: 1, flexDirection: 'row', marginLeft: wp(5) }}>\n            <View style={{ flex: 1 }}>\n              <TypeWriter\n                style={{\n                  color: COLOR.rgbGreen,\n                  fontWeight: 'bold',\n                  fontSize: width >= 1045 ? hp(8) : hp(5),\n                }}\n                typing={1}\n                fixed={true}\n              >\n                {`My, Myself & I`}\n              </TypeWriter>\n              <View style={{ maxWidth: (width * 2) / 3 }}>\n                <Text\n                  style={{\n                    color: 'white',\n                    fontWeight: '700',\n                    fontSize: hp(2),\n                  }}\n                >\n                  {'\\n'}\n                  I’m a Mobile & Front-End Developer located in Izmir,Turkey.\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                  Actually, I graduated from Yıldız Technical University,\n                  Electrical Engineering.After working in electrical engineering\n                  for 2 years, my passion for programming has not left me so i\n                  started learning React/React-Native and started making\n                  personal projects.When I felt competent enough,I started to\n                  apply for job postings and I started working as a software\n                  engineer in 2021. In my current job, I work on web and mobile\n                  projects.\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                  I’m eager to learn new technologies, self-motivated, problem\n                  solving and result oriented team player.\n                  {'\\n'}\n                  {'\\n'}\n                  Interested in the entire frontend / mobile spectrum and\n                  working on ambitious projects with positive people.\n                </Text>\n              </View>\n            </View>\n          </View>\n        </View>\n      ) : (\n        <ToggleHeaderContent\n          navigation={navigation}\n          setToggleHeaderContent={setToggleHeaderContent}\n        />\n      )}\n    </View>\n  );\n};\n\nexport default AboutMeScreen;\n","import React, { useEffect, useState } from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport {\n  MainScreen,\n  BlogScreen,\n  SkillsScreen,\n  AboutMeScreen,\n} from '../screens';\n\nconst MainStack = createNativeStackNavigator();\n\nconst MainStackScreen = () => {\n  return (\n    <MainStack.Navigator\n      initialRouteName='MainScreen'\n      screenOptions={{\n        headerShown: false,\n      }}\n    >\n      <MainStack.Screen name='Home' component={MainScreen} />\n      <MainStack.Screen name='About' component={AboutMeScreen} />\n      <MainStack.Screen name='Skills' component={SkillsScreen} />\n      <MainStack.Screen name='Blog' component={BlogScreen} />\n    </MainStack.Navigator>\n  );\n};\n\nexport default MainStackScreen;\n","import React from 'react';\nimport { StyleSheet, Text, View, useWindowDimensions } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport MainStackScreen from './src/navigation/Main';\nimport {\n  MainScreen,\n  AboutMeScreen,\n  ContactScreen,\n  SkillsScreen,\n  WorkScreen,\n  BlogScreen,\n} from './src/screens';\nimport { COLOR } from './globalStyles';\n\nexport default function App() {\n  const linking = {\n    prefixes: ['https://localhost:19006'],\n    config: {\n      screens: {\n        Root: {\n          path: '/',\n          initialRouteName: '/',\n          screens: {\n            MainScreen: '/',\n            AboutMeScreen: '/About',\n            SkillsScreen: '/Skills',\n            BlogScreen: '/Blog',\n          },\n        },\n      },\n    },\n  };\n  const { height, width, scale } = useWindowDimensions();\n\n  return (\n    <NavigationContainer linking={linking} fallback={<Text>Loading...</Text>}>\n      <MainStackScreen />\n    </NavigationContainer>\n  );\n}\n","module.exports = __webpack_public_path__ + \"static/media/kLogo.d881410b.png\";"],"sourceRoot":""}